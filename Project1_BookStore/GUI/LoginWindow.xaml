<Window x:Class="Project1_BookStore.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Project1_BookStore"
        xmlns:utils="clr-namespace:Project1_BookStore.Utils"
        mc:Ignorable="d"
        Title="LoginWindow" FontFamily="Inter" Height="727" Width="1234" WindowStartupLocation="CenterScreen"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent" Loaded="Window_Loaded"
        KeyDown="Window_KeyDown">
    <Window.Resources>
        <utils:RelativeToAbsoluteConverter x:Key="absoluteConverter"/>
        <ImageBrush x:Key="CloseButton.Pressed.Background" ImageSource="{Binding closePressed, Converter={StaticResource absoluteConverter}}" Stretch="Fill"/>
        <ImageBrush x:Key="MaxButton.Pressed.Background" ImageSource="{Binding maximizePressed, Converter={StaticResource absoluteConverter}}" Stretch="Fill"/>
        <ImageBrush x:Key="ReDownButton.Background" ImageSource="{Binding restore, Converter={StaticResource absoluteConverter}}" Stretch="Fill"/>
        <ImageBrush x:Key="ReDownButton.Pressed.Background" ImageSource="{Binding restorePressed, Converter={StaticResource absoluteConverter}}" Stretch="Fill"/>
        <ImageBrush x:Key="MinButton.Pressed.Background" ImageSource="{Binding minimizePressed, Converter={StaticResource absoluteConverter}}" Stretch="Fill"/>

        <Style x:Key="CloseButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CloseButton.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CloseButton.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaxButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MaxButton.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MaxButton.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ReDownButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="False">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ReDownButton.Background}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ReDownButton.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ReDownButton.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MinButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MinButton.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MinButton.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Border Background="#EBECF0" BorderBrush="#EBECF0"
        BorderThickness="3"
        CornerRadius="35">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="76*"/>
                <RowDefinition Height="645*"/>
            </Grid.RowDefinitions>

            <!--row 2-->
            <Grid Grid.Row="0">
                <StackPanel
                        Orientation="Horizontal"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Height="36" Width="117"
                                Margin="0,25,40,0">
                    <Border CornerRadius="50" Margin="0,0,4,0" Width="36">
                        <Border.Background>
                            <SolidColorBrush Color="White" Opacity="0.6"/>
                        </Border.Background>
                        <Button Style="{DynamicResource MinButton}" x:Name="minButton" BorderThickness="0" Height="24" Width="24"
                             Click="minButton_Click">
                            <Button.Background>
                                <ImageBrush ImageSource="{Binding minimize, Converter={StaticResource absoluteConverter}}"/>

                            </Button.Background>
                        </Button>
                    </Border>

                    <Border CornerRadius="50" Margin="0,0,4,0" Width="36">
                        <Border.Background>
                            <SolidColorBrush Color="White" Opacity="0.6"/>
                        </Border.Background>
                        <Canvas>
                            <Button Style="{DynamicResource MaxButton}" x:Name="maxButton" BorderThickness="0" Height="18" Width="18"
                             Click="maxButton_Click" Canvas.Left="9" Canvas.Top="9">
                                <Button.Background>
                                    <ImageBrush ImageSource="{Binding maximize, Converter={StaticResource absoluteConverter}}"/>
                                </Button.Background>
                            </Button>
                            <Button Style="{DynamicResource ReDownButton}" x:Name="reDownButton" BorderThickness="0" Height="24" Width="24"
                             Click="maxButton_Click" Canvas.Left="6" Canvas.Top="6"/>
                        </Canvas>
                    </Border>

                    <Border CornerRadius="50" Width="36">
                        <Border.Background>
                            <SolidColorBrush Color="White" Opacity="0.6"/>
                        </Border.Background>
                        <Button Style="{DynamicResource CloseButton}" x:Name="closeButton" BorderThickness="0" Height="24" Width="24"
                             Click="closeButton_Click">
                            <Button.Background>
                                <ImageBrush ImageSource="{Binding close, Converter={StaticResource absoluteConverter}}"/>
                            </Button.Background>
                        </Button>
                    </Border>

                </StackPanel>
            </Grid>

            <!--comlumn 1-->
            <Grid Grid.Row="1" Margin="60,12,978,573">
                <Image Height="50" Margin="0,0,140,0"
                    Source="{Binding logo, Converter={StaticResource absoluteConverter}}" />
                <TextBlock Height="36" Margin="60,12,0,12" 
                       Text="Book Up" FontSize="30" FontWeight="Bold" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.Foreground>
                        <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                            <GradientStop Color="#8346fb" Offset="1.0"/>
                            <GradientStop Color="#fac382" Offset="0.5"/>
                            <GradientStop Color="#7543c7" Offset="0.2"/>
                        </LinearGradientBrush>
                    </TextBlock.Foreground>
                </TextBlock>
            </Grid>

            <Border Grid.Row="1"
                            Background="#FFFFFF" 
                            CornerRadius="20" Margin="386,128,386,155">

                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Label Content="Đăng nhập"  
                           FontSize="25" FontWeight="SemiBold"
                           HorizontalAlignment="Center" Margin="25,55,25,0"></Label>

                    <Label Content="Tên tài khoản"
                           FontFamily="Inter" FontSize="15" FontWeight="Medium"
                           HorizontalAlignment="Left" Margin="10,25,25,0" Width="104"></Label>

                    <Grid Height="40" Width="300">
                        <Grid.Effect>
                            <DropShadowEffect BlurRadius="10"
                              Color="#877b77"
                              Opacity="100"
                              ShadowDepth="3"
                              Direction="350" />
                        </Grid.Effect>

                        <TextBox x:Name="userTextBox"
                             Padding="5 10 0 0"
                             Height="40" Width="300"
                             Background="#EBECF0" BorderThickness="0"/>
                    </Grid>


                    <Label Content="Mật khẩu"                       
                           FontSize="15" FontWeight="Medium"
                           HorizontalAlignment="Left" Margin="10,20,0,0"></Label>

                    <Grid Height="40" Width="300">
                        <Grid.Effect>
                            <DropShadowEffect BlurRadius="10"
                              Color="#877b77"
                              Opacity="100"
                              ShadowDepth="3"
                              Direction="350" />
                        </Grid.Effect>

                        <PasswordBox x:Name="passTextBox" 
                             Padding="5 10 0 0"
                             Height="40" Width="300"
                             Background="#EBECF0" BorderThickness="0"/>
                    </Grid>


                    <Border CornerRadius="15" Padding="2" Width="110" Height="40"
                            VerticalAlignment="Top" HorizontalAlignment="Center" Margin="15,35,25,25">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                                <GradientStop Color="#fac382" Offset="0.5" />
                                <GradientStop Color="#7543c7" Offset="0.75" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Button Cursor="Hand" x:Name="loginButton" Click="loginButton_Click" IsDefault="True"
                                Content="Đăng nhập" FontSize="15" FontWeight="Bold"
                                BorderBrush="Transparent" Background="White" Foreground="Black">

                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="13"/>
                                </Style>
                            </Button.Resources>
                        </Button>
                    </Border>
                </StackPanel>
            </Border>

            <Ellipse Grid.Row="1" Margin="569,83,569,472">
                <Ellipse.Fill>
                    <ImageBrush ImageSource="{Binding avatar, Converter={StaticResource absoluteConverter}}"/>
                </Ellipse.Fill>
            </Ellipse>

        </Grid>
    </Border>
</Window>